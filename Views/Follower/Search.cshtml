@*@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers;*@

@model SearchViewModel;

<!-- BARRE DE RECHERCHE-->
<header id="searchBar">
	<div id="searchWrapper">
		<input id="search" name="Keywords" type="text" placeholder="Search..." autocomplete="off" form="searchForm" autofocus />
		<img id="searchIcon" src="#" alt="" />
	</div>
</header>

<!-- FORMULAIRE DE RECHERCHE (HIDDEN PAR DEFAULT)-->
<form id="searchForm" action="/search/filter" method="get">
	<div class="formWrapper">
		@* CATEGORIE DU COMPAGNION *@
		<div class="categoriesWrapper">
			@* Quel jeu est selectionne (change selon le nb de jeux dans la db) *@
			@* On aurait aussi pu utiliser un select multiple, mais ca rend le model binding plus complique*@
			@for (int i = 0; i < Model.Criteria.GamesFilter.Count; i++)
			{
				var item = Model.Criteria.GamesFilter.ElementAt(i);

				<label>@item.Value</label>
				<input name="GamesFilter[@item.Key].Key"   type="hidden"    value="@item.Key" />
				<input name="GamesFilter[@item.Key].Value" type="hidden"  value="true"  />
				@*<input name="GamesFilter[@item.Key].Value" type="hidden"    value="false" />*@
			}

			@* La race du compagnion *@
			@for (int i = 0; i < Model.Criteria.RacesFilter.Count; i++)
			{
				var item = Model.Criteria.RacesFilter.ElementAt(i);

				<label>@item.Key</label>
				<input name="RacesFilter[@item.Key].Key"   type="hidden"    value="@item.Key" />
				<input name="RacesFilter[@item.Key].Value" type="checkbox"  value="@item.Value" @(item.Value ? "checked" : "") onchange="this.value = this.checked"  />
				<input name="RacesFilter[@item.Key].Value" type="hidden"    value="false" />
			}

			@* La classe du compagnion *@
			@for (int i = 0; i < Model.Criteria.ClassesFilter.Count; i++)
			{
				var item = Model.Criteria.ClassesFilter.ElementAt(i);

				<label>@item.Key</label>
				<input name="ClassesFilter[@item.Key].Key"   type="hidden"    value="@item.Key" />
				<input name="ClassesFilter[@item.Key].Value" type="checkbox"  value="@item.Value" @(item.Value ? "checked" : "") onchange="this.value = this.checked"  />
				<input name="ClassesFilter[@item.Key].Value" type="hidden"    value="false" />
			}
		</div>

		@* ATTRIBUTS *@
		<div class="attributesWrapper">
			@* Si c'est un favori (enum) *@
			<label for="cboFavori">Est un favori</label>
			<select id="cboFavori" name="FavoriteFilter">
				<option value="0">Peu importe</option>
				<option value="1">Non</option>
				<option value="2">Oui</option>
			</select>

			@* Le degre de protection du compagnion (enum) *@
			<div class="protectWrapper">
				<label for="cbxProtect1">Peu importe</label><input id="cbxProtect1" name="ProtectionFilter" type="radio" value="0" />
				<label for="cbxProtect2">Aucune</label><input id="cbxProtect2" name="ProtectionFilter" type="radio" value="1" />
				<label for="cbxProtect3">Protege</label><input id="cbxProtect3" name="ProtectionFilter" type="radio" value="2" />
				<label for="cbxProtect4">Essentiel</label><input id="cbxProtect4" name="ProtectionFilter" type="radio" value="3" />
			</div>
		</div>

		@* STATISTIQUES *@
		<div class="statsWrapper">
			@* L'alignment minimum/maximum du compagnion *@
			<input name="MinAlignment" type="range" min="0" value="@Model.Criteria.MinAlignment" max="100" />
			<input name="MaxAlignment" type="range" min="0" value="@Model.Criteria.MaxAlignment" max="100" />

			@* La vie minimum et maximum *@
			<input name="MinHitpoints" type="number" min="0" value="@Model.Criteria.MinHitpoints" max="999" />
			<input name="MinHitpoints" type="number" min="0" value="@Model.Criteria.MaxHitpoints" max="999" />

			@* L'energie minimum et maximum *@
			<input name="MinEnergy" type="number" min="0" value="@Model.Criteria.MinEnergy" max="999" />
			<input name="MaxEnergy" type="number" min="0" value="@Model.Criteria.MaxEnergy" max="999" />
		</div>
	</div>
</form>

<!-- LISTE DES COMPAGNIONS-->
<section id="cardsWrapper" data-color="red">
	@foreach (Follower follower in Model.Results)
	{
		<button class="follower link" data-href="/details/@follower.Id">
			<img class="thumbnail" src="/images/games/@(follower.Parent.ShortName)/followers/@(follower.ShortName)/thumbnail.jpg" />
			<div class="container">
				<div class="primaryinfo">
					<img class="gamelogo" src="/images/games/@(follower.Parent.ShortName)/logo.png" />
					<h2>@follower.Name</h2>
				</div>

				<div class="secondaryinfo">
					@if (follower.IsFavorite)
					{
						<img src="~/images/shared/attributes/favorite.png" />
					}
					@if (follower.IsEssential)
					{
						<img src="~/images/shared/attributes/essential.png" />
					}
					@if (follower.DoesRespawn)
					{
						<img src="~/images/shared/attributes/respawns.png" />
					}
				</div>
			</div>
		</button>
	}
</section>

<!-- CITATIONS ALEATOIRES -->
<footer id="quotesBar">
	<blockquote>TODO Using ViewModel</blockquote>
</footer>
